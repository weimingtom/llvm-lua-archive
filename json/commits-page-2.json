{"Page":2,"TotalPages":2,"commits":[{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-31 04:27:15 +0000","commit":"f7cc8b6aed1c7da884d08bfb1e4b869ad31ce631","message":"Fixed bug with lua-compiler script and the 'cbe' mode. Fixed example compile/link commands in README.llvm-lua."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-31 03:34:32 +0000","commit":"450e5c479fdf513b0e9af21a0e2121c3556de5a4","message":"Bump version to 1.0. Add for information to README.llvm-lua Fixed some bugs with embedding llvm-lua. Added -help option to lua-compiler script."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-30 09:54:12 +0000","commit":"3b9fd96636a61b6cdec6ff3691c8bce63eb31964","message":"Added lua scripts used for regression testing."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-30 06:33:39 +0000","commit":"e4f72cdb485a620335651f3e391e392ddb4968cc","message":"Improved speed of math.* functions by lowering the call overhead."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-28 08:45:11 +0000","commit":"db4b8fe3d37bf5cae5548b1dd45eb860fb59f78d","message":"Fixed some bugs with numeric forloop optimizations."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-24 11:40:40 +0000","commit":"43e34b1831e8551e7fca4baa6331dfa68e038913","message":"Improved performance of numeric for loops."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-21 07:25:55 +0000","commit":"d36ab3716b13c49fd8db136fd9245201ff9e6274","message":"Added some optimizations. Fixed a few bugs."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-20 04:09:16 +0000","commit":"292da682860aa060677c3788d90dc52bd6c6d765","message":"Fixed support for using c-backend to compile Lua scripts to standalone binaries."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-20 00:40:06 +0000","commit":"ecb03907c23c26f5a401e3473e53023ea4c6414a","message":"Bump version number to 0.9 Cleaned up Makefile. Renamed llvm-luac wrapper script from compile.sh to lua-compiler."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-20 00:17:14 +0000","commit":"16953a36bdb0e35506794c8a8c2a7310291028d3","message":"Embedded lua_vm_ops.bc \u0026 liblua_main.bc instead of loading/linking them at run-time."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-19 07:26:37 +0000","commit":"85fd09fc3ff4148a8c851ab1b7368fd55cc8a335","message":"Fixed bugs with debug hooks. Added line/upvalues/locals info to jit_proto, to support debugging info of JITed code. Allow debuging info be stripped when compling Lua scripts."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-05-17 14:22:18 +0000","commit":"5c1152ed0e9d0d45f2765a76cdb146f7fb34f704","message":"Fixed compile bug. Fixed lua debug libraries handling of JIT functions that have Lua bytecode stripped."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-03-12 10:30:03 +0000","commit":"34a57ed85037d7a421ebe29d5c676992b3a947cc","message":"Added support for stripping Lua opcodes from compiled Lua code (can be used for obfucation). Added support for compiling Lua code as native code modules instead of just standalone binaries. Added support for compiling llvm-lua as an embeddable library with JIT support. Improved compile.sh wrapper script."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-03-06 05:40:33 +0000","commit":"0998a905613f337a969d7ac9ccc8012660009fa2","message":"Fixed bug with Lua stack re-allocation."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2009-01-22 06:48:45 +0000","commit":"1c18de00d72321c483b9421e1cda5719af2ce6b2","message":"fixed bug with llvm asserts. Added bash script for compiling lua scripts to C code."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-09 00:55:04 +0000","commit":"efe76788bb1c44100866451679241308a0e26873","message":"compile llvm bitcode to assembly instead of 'C' code."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-08 06:03:18 +0000","commit":"1592c1df9284b2d8e0bf8578841db4b78510026b","message":"remove '-foptimize-sibling-calls' disabled '-march=athlon64'"},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-08 04:59:28 +0000","commit":"373e156ccc01f81b476f2a017587ef0eede0e75b","message":"bump version to 0.5"},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-08 04:14:04 +0000","commit":"bbe60c443973fba0c35cb7198b5c5ef88181753b","message":"Added 'PCRTAILRECUR' for tail-recursive calls from JIT functions."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-08 03:52:52 +0000","commit":"3a0385576f02cab396314531328582428c56302c","message":"Fixed memory offset bug \u0026 memory leaks. Fixed '-time-passes' to display info about passes run by JIT. Changed default Optimization level to '3'."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-07 23:34:11 +0000","commit":"1b7fbec4b95a0b22efaae0a4dfec37c67a6da05e","message":"Added specialized functions for OP_EQ. Added support to Lower for loop's internal idx variable from the Lua stack to the c-stack. Added support to remove \"LOADK\" opcodes used for constant for loop parameters and turn then into llvm constants. Added command-line options for controlling the optimization level. Fixed bug with passing command-line options to the Lua core interpreter \u0026 compiler."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-05 07:29:39 +0000","commit":"0a39cecbaf5237b0b1e50f84ab31570209fd958b","message":"Fixed a few bugs. Improved tail-calls from JIT function to non-JIT Lua function."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-05 05:22:22 +0000","commit":"4db663d5ececa9918a935bc8cd3a39b420a13c31","message":"Added LLVM command options to llvm-luac. Don't compiled inlined opcode functions, since they will not be called."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-05 04:15:55 +0000","commit":"15ea1fc6fdbcef7e972824f81b6eec83078ef3f3","message":"Fixed tail-call support, now lua scripts can make tail-calls without the c-stack/lua callstack growing. Added some optimizations of the Lua bytecode and generated machine code. Lowered the opcode limit from 800 down to 200 for the max function size that is JITed. Added support for specialized versions of each opcode function to support more optimizations."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-03 21:49:56 +0000","commit":"70278b38b24ba9595392804508eb26d8a78f7ea6","message":"remove unused argument."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-03 09:33:33 +0000","commit":"515b95c4448fec97bb78b8471e8b4140c0c3f39c","message":"Fixed 32bit support for static compiling Lua scripts."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-03 06:08:58 +0000","commit":"55248af0f65bbf72c6ed7f5f5bcd1ec4e4063af4","message":"Improve Makefile support for other platforms."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-03 04:46:35 +0000","commit":"6940b32098862fa4faa4b51ff8ad74a903e67a6a","message":"Improved true tailcall support when calling a JIT/C function from a JIT function. Removed 'func_state' structure from JIT functions to allow tailcalls into vm_OP_* functions."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-10-03 04:24:46 +0000","commit":"81028d6a4f7f557b47f83365ae8e09ea97a6b975","message":"Export 'tryfuncTM' function as 'luaD_tryfuncTM' from ldo.c disable HARDSTACKTESTS tests."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-29 09:49:41 +0000","commit":"90f4a130ae99ff8ffc4d30b6cfb2ae47a5a2cada","message":"Moved some large vm_OP_* functions from loadable bitcode file into llvm-lua. Added LLVM timers to compiler. Added support for LLVM command line options. Some code clean up."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-28 23:54:56 +0000","commit":"4c1019b1dccc0fc9ad9e0852fc0946de0cc22d4a","message":"fixed compile bug."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-27 10:43:12 +0000","commit":"11c131d256831f5fe16a0470be9d39c47c69e8e3","message":"Add command line parsing support for LLVM options."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-27 08:34:14 +0000","commit":"9994de2bbc5a134927a124f4282fa11bc4aa687d","message":"search current directory \u0026 LLVM_LIB_SEARCH_PATH for lua_vm_ops.bc file."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-27 06:02:28 +0000","commit":"f49adfe6a1e7112a0e51b9a7f3063d3236efcad7","message":"Added a new way to load the lua_vm_ops.bc by compiling it into C++ LLVM API calls and embedding it into the llvm-lua \u0026 llvm-luac programs. Re-factored Lua bytecode to LLVM IR compiler code into two classes LLVMCompiler \u0026 LLVMDumper. Fixed some other bugs."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-23 20:06:17 +0000","commit":"bfe87cfc55ea6d9d54ca1d13a8a9f0ab7b9b5932","message":"Mac OS X 64bit fix from Mike Pall"},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-09-19 08:49:10 +0000","commit":"4e30115ba12d1fb58bbbe34fd9c8bb573d0dbcbc","message":"Update to Official Lua-5.1.4"},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-30 07:32:01 +0000","commit":"fea27301649f4bf231e74f738e36f94bbc555304","message":"Changed from using %rbp \u0026 %rbx to %r12 \u0026 %r13 for wrap function."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-30 06:07:23 +0000","commit":"2ff4c4a5d6c00345c54d50f19ea36e8a74c3fafe","message":"Fixed support for line/count debug hooks."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-30 04:38:08 +0000","commit":"ecb3e61949a9255e2b51f370049f5ac826cc0ea7","message":"Added wrap function to set register %rdi (to lua_State *) on first resume of a coroutine, instead of very resume/yield."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-28 04:19:05 +0000","commit":"5f1f1f773ef9f10220a90f66370f495ffa983ae3","message":"Patch from \"Kay Ropke\" fixes bug with compiling on OS X with the latest LLVM revision(55456)."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-27 05:25:15 +0000","commit":"28f38340b338ccddd5d84c5f723bd7cae3b7116f","message":"fixed bug with boolean constants when static compiling Lua scripts."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-26 08:43:39 +0000","commit":"97a47784a6649ff2c581859ca25506671f6f5a71","message":"add message"},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-25 23:25:04 +0000","commit":"09d4588d1a1f2b5009d167cd0a5bed77fe81e0ed","message":"Fixed bugs with calling non-JITed Lua functions. Manually inline opcode functions instead of using the inliner pass. Code cleanup."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-23 10:08:17 +0000","commit":"bd19d18d9aed276a1b01c9f82fa3e724ef7e30d1","message":"fixed bug with assembly coco_switcher for x86_64."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-23 08:30:14 +0000","commit":"c35ed4573ddf072d80a7bd0d639de9e8559a8c50","message":"Added added assembly ctx_switcher for x86_64-linux to LuaCoco."},{"author":"bobby@neoawareness.com","email":"bobby@neoawareness.com@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-23 03:28:28 +0000","commit":"6316f10cdefa2dd1e46ed0d66a494e5677c371b7","message":"Initial 0.1 release"},{"author":"(no author)","email":"(no author)@f87b780f-1855-0410-a4d3-fd11cda3f415","date":"2008-08-23 03:22:14 +0000","commit":"91d883783f42429b7a1012a7f86990301a7ba479","message":"Initial directory structure."}]}